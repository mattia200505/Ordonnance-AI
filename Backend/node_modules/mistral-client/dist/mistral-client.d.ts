import { Mistral } from '@mistralai/mistralai';
import { ChatCompletionRequest, ChatCompletionStreamRequest } from '@mistralai/mistralai/models/components';
import { RequestOptions } from '@mistralai/mistralai/src/lib/sdks';
import { TaskQueue } from '@beenotung/tslib/task/task-queue';
export declare class MistralClient {
    private options;
    client: Mistral;
    taskQueue: TaskQueue;
    lastTime: number;
    rateLimitInterval: number;
    constructor(options: {
        apiKey: string;
    });
    waitForCoolDown(): Promise<void>;
    /**
     * wrapper of this.complete()
     *
     * @example
     * ```typescript
     * let completion = await client.askAsync({
     *   model: 'mistral-large-latest',
     *   messages: [{ role: 'user', content: 'Introduce ts-liveview in zh-hk' }],
     * })
     * let content = completionContentToString(completion?.message.content)
     * console.log(content)
     * ```
     */
    askAsync(request: ChatCompletionRequest, options?: RequestOptions): Promise<import("@mistralai/mistralai/models/components").ChatCompletionChoice | undefined>;
    complete(request: ChatCompletionRequest, options?: RequestOptions): Promise<import("@mistralai/mistralai/models/components").ChatCompletionResponse>;
    /**
     * @example
     * ```typescript
     * let stream = client.askInStream({
     *   model: 'mistral-large-latest',
     *   messages: [{ role: 'user', content: 'Introduce ts-liveview in zh-hk' }],
     * })
     * for await (let completion of stream) {
     *   let content = completionContentToString(completion.delta.content)
     *   process.stdout.write(content)
     * }
     * process.stdout.write('\n[end]\n')
     * ```
     */
    askInStream(request: ChatCompletionRequest, options?: RequestOptions): AsyncGenerator<import("@mistralai/mistralai/models/components").CompletionResponseStreamChoice, void, unknown>;
    /** with rate limit throttling, return full completion response for custom usage */
    stream(request: ChatCompletionStreamRequest, options?: RequestOptions): AsyncGenerator<import("@mistralai/mistralai/models/components").CompletionEvent, void, unknown>;
}
