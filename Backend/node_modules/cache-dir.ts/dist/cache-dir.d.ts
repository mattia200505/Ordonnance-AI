/// <reference types="node" />
export type CacheDirOptions = {
    /** @default '.cache' */
    dir?: string;
    /** @default 15*60*1000 (15 minutes) */
    expireInterval?: number;
    /** @default '.gitignore' (false to skip auto append) */
    gitignore?: string | false;
};
/**
 * @description Cache and re-use computation result with custom filename and directory.
 * */
export declare class CacheDir {
    dir: string;
    expireInterval: number;
    constructor(options?: CacheDirOptions);
    runSync(args: {
        filename: string;
        fn: () => string;
        as?: 'string';
    }): string;
    runSync(args: {
        filename: string;
        fn: () => Buffer;
        as?: 'buffer';
    }): Buffer;
    runAsync(args: {
        filename: string;
        fn: () => Promise<string>;
        as?: 'string';
    }): Promise<string>;
    runAsync(args: {
        filename: string;
        fn: () => Promise<Buffer>;
        as?: 'buffer';
    }): Promise<Buffer>;
}
